{"ast":null,"code":"var _jsxFileName = \"/home/hernan/Documents/Repositories/DMI/src/components/Shows/Show/Show.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { noImage } from \"../../../utils/utils\";\nimport PropTypes from \"prop-types\";\nimport \"./Show.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Show = function Show(_ref) {\n  _s();\n\n  var data = _ref.data;\n  useEffect(function () {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      as: \"section\",\n      className: \"mt-5\",\n      children: [data.map(function (element, key) {\n        var _element$show, _element$show2, _element$show2$image, _element$show3, _element$show4, _element$show5, _element$show6;\n\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"showCard\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            className: \"showImage\",\n            variant: \"top\",\n            src: (element === null || element === void 0 ? void 0 : (_element$show2 = element.show) === null || _element$show2 === void 0 ? void 0 : (_element$show2$image = _element$show2.image) === null || _element$show2$image === void 0 ? void 0 : _element$show2$image.medium) || {\n              noImage: noImage\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: element === null || element === void 0 ? void 0 : (_element$show3 = element.show) === null || _element$show3 === void 0 ? void 0 : _element$show3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"showSummary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: (element === null || element === void 0 ? void 0 : (_element$show4 = element.show) === null || _element$show4 === void 0 ? void 0 : _element$show4.summary) || \"No description provided\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"cardButton\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/details/\".concat(element === null || element === void 0 ? void 0 : (_element$show5 = element.show) === null || _element$show5 === void 0 ? void 0 : _element$show5.id),\n                children: \"Show details\"\n              }, element === null || element === void 0 ? void 0 : (_element$show6 = element.show) === null || _element$show6 === void 0 ? void 0 : _element$show6.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this)]\n        }, element === null || element === void 0 ? void 0 : (_element$show = element.show) === null || _element$show === void 0 ? void 0 : _element$show.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Show, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Show;\nShow.propTypes = {\n  data: PropTypes.array\n};\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["/home/hernan/Documents/Repositories/DMI/src/components/Shows/Show/Show.js"],"names":["React","useEffect","Card","Button","Row","Link","Outlet","noImage","PropTypes","Show","data","map","element","key","show","image","medium","name","__html","summary","id","propTypes","array"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,aAAP;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzBT,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAA,iBACGS,IAAI,CAACC,GAAL,CAAS,UAACC,OAAD,EAAUC,GAAV;AAAA;;AAAA,4BACR,QAAC,IAAD;AAA8B,UAAA,SAAS,EAAC,UAAxC;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,OAAO,EAAC,KAFV;AAGE,YAAA,GAAG,EAAE,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,8BAAAA,OAAO,CAAEE,IAAT,0FAAeC,KAAf,8EAAsBC,MAAtB,KAAgC;AAAET,cAAAA,OAAO,EAAPA;AAAF;AAHvC;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,wBAAaK,OAAb,aAAaA,OAAb,yCAAaA,OAAO,CAAEE,IAAtB,mDAAa,eAAeG;AAA5B;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,qCACE;AACE,gBAAA,uBAAuB,EAAE;AACvBC,kBAAAA,MAAM,EAAE,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,8BAAAA,OAAO,CAAEE,IAAT,kEAAeK,OAAf,KAA0B;AADX;AAD3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAFF,eASE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,SAAS,EAAC,YAApC;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,EAAE,qBAAcP,OAAd,aAAcA,OAAd,yCAAcA,OAAO,CAAEE,IAAvB,mDAAc,eAAeM,EAA7B,CADJ;AAAA;AAAA,iBAEOR,OAFP,aAEOA,OAFP,yCAEOA,OAAO,CAAEE,IAFhB,mDAEO,eAAeM,EAFtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA,WAAWR,OAAX,aAAWA,OAAX,wCAAWA,OAAO,CAAEE,IAApB,kDAAW,cAAeM,EAA1B;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAT,CADH,eA4BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,eA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD,CArCD;;GAAMX,I;;KAAAA,I;AAuCNA,IAAI,CAACY,SAAL,GAAiB;AACfX,EAAAA,IAAI,EAAEF,SAAS,CAACc;AADD,CAAjB;AAIA,eAAeb,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nimport { noImage } from \"../../../utils/utils\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./Show.scss\";\n\nconst Show = ({ data }) => {\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Row as=\"section\" className=\"mt-5\">\n        {data.map((element, key) => (\n          <Card key={element?.show?.id} className=\"showCard\">\n            <Card.Img\n              className=\"showImage\"\n              variant=\"top\"\n              src={element?.show?.image?.medium || { noImage }}\n            />\n            <Card.Body>\n              <Card.Title>{element?.show?.name}</Card.Title>\n              <Card.Text className=\"showSummary\">\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: element?.show?.summary || \"No description provided\"\n                  }}\n                />\n              </Card.Text>\n              <Button variant=\"primary\" className=\"cardButton\">\n                <Link\n                  to={`/details/${element?.show?.id}`}\n                  key={element?.show?.id}\n                >\n                  Show details\n                </Link>\n              </Button>\n            </Card.Body>\n          </Card>\n        ))}\n        <Outlet />\n      </Row>\n    </>\n  );\n};\n\nShow.propTypes = {\n  data: PropTypes.array\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}